[core]
# The hostname of the IRC server to connect to.
server: irc.example.com

# The above server's port number.
port: 6667

# Should the server connection use SSL?
ssl: yes


# The default nickname to use.
nickname: Omnipresence-dev

# The server password to send on login (optional).  Note that NickServ
# identification is handled by a plugin, not this setting.
;password:

# The "real name" field given by a whois (optional).
;realname:

# The username to use in the bot's hostmask (optional).  If not set,
# most servers will use the first few characters of the provided
# nickname instead.
;username:


# The default character encoding used to parse and send messages.
encoding: utf-8


# A list of space-separated prefixes that users can use to indicate a
# command invocation.  The following special tokens are recognized:
#
#   %(nickname)s - The default nickname set above.
#
#   %(current_nickname)s - The bot's current nickname.  This may differ
#   from the default nickname in the event of a nick collision.
command_prefixes: %(nickname)s: %(nickname)s, %(current_nickname)s: %(current_nickname)s, !


# A SQLObject connection URI indicating the database to use.  For syntax
# information, see <http://sqlobject.org/SQLObject.html#id19>.
database: sqlite:/:memory:


# The cache directory used by httplib2.
http_cache_dir: /var/cache/omnipresence


# The [channels] section indicates the channels that the bot will join
# after connecting, and which event handler plugins will be active in
# each of those channels.  The syntax is generally:
#
#   channelname: handler1 handler2 handler3 ...
#
# Note that Omnipresence calls handlers in the order they are specified
# in this configuration file.  This usually doesn't matter, but has some
# effects on the behavior of plugins like "chanlog" (see below).
[channels]
# "@" is a special channel name indicating handlers that will respond to
# non-channel events such as private messages or notices.
#
# Available plugins:
#
#   nickserv - Handle identification to NickServ on most servers.  See
#   the [nickserv] section below for further configuration.
@: nickserv

# For other channels, omit the # channel prefix; Omnipresence will add
# it automatically on join, and in Python's configuration file syntax, a
# leading # indicates a comment!  For + channels available only on one
# server (instead of an entire network), include the prefix.
#
# Available plugins:
#
#   autorejoin - Automatically rejoin when kicked from a channel.
#
#   autovoice - Automatically voice users when they enter a channel,
#   unless the +m channel mode is set.
#
#   chanlog - Log channel activity to a file, in the format used by
#   Supybot's ChannelLogger plugin.  See the [chanlog] section below for
#   further configuration.  For best results, place this first in the
#   list of handlers; otherwise, bot responses to events may be logged
#   before the events they are responding to.
#
#   peak - See the "peak" command below.
#
#   rss - Notify channels about updates to RSS feeds.  There is a
#   corresponding command for retrieving cached RSS data, which can be
#   configured below.  See the [rss] section for further configuration.
#   Requires the feedparser module.
#
#   seen - See the "seen" command below.
#
#   trace - See the "trace" command below.
#
#   tvtropes - Watch for messages containing the titles of articles on
#   TV Tropes <http://tvtropes.org/> surrounded by {{ }}, and respond
#   with a link to the appropriate page.  This functionality is also
#   available through the "trope" command.
#
#   url - Respond to URLs in messages with a page title: the contents of
#   the <title> tag for HTML pages, the first line of the file for plain
#   text files, and dimensions and file size for images.  See the [url]
#   section below for further configuration.  Image sniffing support
#   requires the Pillow module.
sample-channel: chanlog peak seen trace url
channel-with-autoop: chanlog autorejoin autovoice
channel-with-no-handlers:


# The [commands] section indicates which command plugins will be active,
# in the format:
#
#   keyword: pluginname
#
# The keyword is what users will use to invoke commands, preceded by one
# of the prefixes specified in [core].  One command plugin can be
# assigned to multiple keywords; for example, "wikipedia" can be mapped
# to "w", "wp", and "wiki" with the following:
#
#   w: wikipedia
#   wp: wikipedia
#   wiki: wikipedia
#
# Available plugins:
#
#   Basic commands:
#
#     help - Provide online help for enabled command plugins.  See the
#     [help] section below for further configuration.
#
#     more - Retrieve additional contents from current message buffer.
#     Note that message buffering will occur whether or not this command
#     is enabled.
#
#   Commands requiring additional handlers:
#
#     peak - Return the highest number of users ever seen in a channel
#     where the "peak" handler is enabled.
#
#     rss - Get information about feeds from the "rss" handler.
#
#     seen - Summarize the last activity seen for a given nick in any
#     of the channels where the "seen" handler is enabled.
#
#     topic - Allow users to change a portion of the channel topic.
#     See the [topic] section below for further configuration.
#
#     trace - List the other nicks that a user has been seen with in any
#     of the channels where the "trace" handler is enabled.
#
#   Google-based commands:
#
#     google - Perform a Google search.
#
#   Wolfram|Alpha-based commands:
#
#     wolframalpha - Query Wolfram|Alpha.  See the [wolframalpha]
#     section below for further configuration.
#
#     wolframalpha_define - Same as "wolframalpha", except that
#     "definition of" is added to the front of the query.  Useful for
#     dictionary lookups.  See the [wolframalpha] section below for
#     further configuration.
#
#   Wikipedia-based commands:
#
#     wikipedia - Look up articles on Wikipedia.
#
#     wikipedia_random - Find a random article on Wikipedia.
#
#   GeoNames-based commands:
#
#     time - Get the current time in a given world location by common
#     name or tz database string.  Requires the pytz Python module.  See
#     the [geonames] section below for further configuration.
#
#     weather - Get the weather conditions in a given world location.
#     See the [geonames] section below for further configuration.
#
#   Other Web services:
#
#     amazon - Perform Amazon product lookups.  Requires an Amazon
#     Product Advertising API account.  See the [amazon] section below
#     for further configuration.
#
#     lastfm - Look up an artist name on Last.fm.  See the [lastfm]
#     section below for further configuration.
#
#     youtube - Find videos on YouTube.
#
#     rottentomatoes - Find information about movies on Rotten Tomatoes.
#     See the [rottentomatoes] section below for further configuration.
#
#     wwwjdic - Look up a Japanese word or phrase (in romanized
#     Japanese, or kanji and kana) on Jim Breen's WWWJDIC.
#
#   Miscellaneous:
#
#     chirpy - Return random quotes from, or search through, a Chirpy!
#     QDB.  See the [chirpy] section below for further configuration.
#
#     dice - A basic dice roller, with support for remembering a bank of
#     roll results for each user.
[commands]
help: help


[amazon]
# Consult your Amazon API account details for these values.
access_key:
secret_key:
associate_tag:
locale:


[chanlog]
# The directory to use for the output files of the "chanlog" handler
# plugin.  Each channel being logged will output to its own file.
directory: /var/log/omnipresence

# The following parameters are as for the TimedRotatingFileHandler in
# Python's standard library logging module:
#
# <https://docs.python.org/2/library/logging.handlers.html#timedrotatingfilehandler>
#
# All are optional, and default to the values shown.  These settings
# rotate logs daily at midnight, keeping thirty days of archived logs.
;when: midnight
;interval: 0
;backup_count: 30


[chirpy]
# An SQLObject database string pointing to the database Chirpy! uses.
database: mysql://user:pass@localhost/qdb?charset=utf8

# The database prefix used by Chirpy!  Optional; defaults to "qdb_".
;prefix: qdb_

# The URL pattern for individual quotes in the Web interface.  Optional;
# quote links are appended to results if this is specified.  "%%d" is
# replaced by the ID number of the quote returned.
;quote_url: http://qdb.example.com/%%d


[geonames]
# Your GeoNames username.  This is mandatory if the GeoNames channel
# plugins are enabled.
;username:


[help]
# A message to append to the default list of commands (optional).
# Useful for pointing users to a bot homepage.
;list_suffix:


[lastfm]
# Your Last.fm API key.  This is mandatory if the Last.fm channel
# plugins are enabled.
apikey: 0123456789abcdef0123456789abcdef


[nickserv]
# The nick!user@host mask of NickServ on your network.
mask: NickServ!NickServ@services.

# The bot's NickServ password.
password: long-scrambled-string-lalalalala

# Should the bot wait until NickServ has acknowledged a successful
# identification before joining channels?
suspend_joins: yes

# Should the bot attempt to use a "ghost" command to reclaim its nick in
# the event that it is already being used?
kill_ghosts: yes

# A regular expression matching your server's request for the bot to
# identify to NickServ, which will be responded to with an "identify".
identify_re: ^This nickname is registered and protected

# A regular expression matching your server's acknowledgement of a
# successful identification to NickServ.
identified_re: ^Password accepted

# A regular expression matching your server's acknowledgement that a
# ghost with the bot's default nick has been successfully killed.
ghost_killed_re: ^Ghost with your nickname has been killed


[rottentomatoes]
# Your Rotten Tomatoes API key.  This is mandatory if the Rotten
# Tomatoes channel plugins are enabled.
apikey: 0123456789abcdefghijklmn


[rss]
# The feed update interval, in minutes.  Optional; defaults to 10.
;update_interval:

# To specify feeds, assign a keyword to the feed in the key, and specify
# the URL followed by a space-separated list of channels to notify as
# the value.  For example:
#
#   example_rss: http://www.example.com/rss mychannel anotherchannel
#   example_atom: http://www.example.net/atom mychannel


[topic]
# In order to enable the "topic" command in any given channel, you must
# add a configuration item here with the channel name (omitting the # if
# necessary) as the key, and a format string as the value.  "%%s" will
# be replaced by the message passed to the command.  For example:
#
#   mychannel: Welcome to my channel! - %%s
#   anotherchannel: Prefix | %%s | Suffix
#
# The following plugin-wide options are prefixed with a "$" to prevent
# them from being interpreted as channel names.
#
# The maximum length allowed for a topic string, including the nick of
# the user setting it.  Optional; defaults to 96.
;$max_message_length:

# A space-separated list of nicks to ignore topic change requests from.
$ignore_messages_from: otherbot


[url]
# A space-separated list of nicks to ignore URLs from.
ignore_messages_from: otherbot


[wolframalpha]
# Your Wolfram|Alpha app ID.  This is mandatory if the Wolfram|Alpha
# channel plugins are enabled.
;appid:
